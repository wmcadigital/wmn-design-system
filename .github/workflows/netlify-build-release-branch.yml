name: Build netlify for release branch
on:
  push:

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      # Checkout branch
      - name: Checkout branch
        uses: actions/checkout@v2
        with:
          persist-credentials: false
      # Setup node environment
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'
      # Get modules from cache
      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      # Build site
      - name: Build site
        run: |
          npm ci
          npm run build:all
      # Deploy build folder to Netlify IF the branch is master
      - name: Deploy to Netlify
        if: github.ref == 'refs/heads/ds/feat/netlify-release-build' && !startsWith(github.event.head_commit.message, 'ci:') && !contains(github.event.head_commit.message, '[skip netlify]')
        uses: nwtgck/actions-netlify@v1.1.11
        with:
          publish-dir: './build'
          production-branch: release
          production-deploy: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: '${{ github.event.head_commit.message }}'
          enable-pull-request-comment: false
          overwrites-pull-request-comment: false
          enable-commit-comment: false
          enable-commit-status: false
          netlify-config-path: ./netlify.toml
          # functions-dir: ./functions
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
